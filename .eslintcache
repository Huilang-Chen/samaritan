[{"/Users/kevinyin/Documents/HackDuke2020/code4good/src/index.js":"1","/Users/kevinyin/Documents/HackDuke2020/code4good/src/App.js":"2","/Users/kevinyin/Documents/HackDuke2020/code4good/src/reportWebVitals.js":"3","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/Conscious.js":"4","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/Home.js":"5","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/Breathing.js":"6","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/Pulse.js":"7","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/RescueBreathing.js":"8","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/Results.js":"9","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/Choking.js":"10","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/RescueBreathingResults.js":"11","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/CPRResults.js":"12","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/ChokingResults.js":"13","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/MonitorResults.js":"14","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/Call911.js":"15","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/OtherResults.js":"16","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/MentalHealth.js":"17","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/MentalResults.js":"18","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/UnconsciousChokingResults.js":"19"},{"size":500,"mtime":1607186016904,"results":"20","hashOfConfig":"21"},{"size":2410,"mtime":1607273434772,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1607186016905,"results":"23","hashOfConfig":"21"},{"size":3549,"mtime":1607218952671,"results":"24","hashOfConfig":"21"},{"size":15277,"mtime":1607232034186,"results":"25","hashOfConfig":"21"},{"size":5305,"mtime":1607225015907,"results":"26","hashOfConfig":"21"},{"size":4096,"mtime":1607224930989,"results":"27","hashOfConfig":"21"},{"size":4505,"mtime":1607225237714,"results":"28","hashOfConfig":"21"},{"size":2647,"mtime":1607233962761,"results":"29","hashOfConfig":"21"},{"size":3050,"mtime":1607226198837,"results":"30","hashOfConfig":"21"},{"size":3288,"mtime":1607223019984,"results":"31","hashOfConfig":"21"},{"size":3528,"mtime":1607223969780,"results":"32","hashOfConfig":"21"},{"size":5064,"mtime":1607225829964,"results":"33","hashOfConfig":"21"},{"size":326,"mtime":1607223959124,"results":"34","hashOfConfig":"21"},{"size":497,"mtime":1607224071868,"results":"35","hashOfConfig":"21"},{"size":306,"mtime":1607224820357,"results":"36","hashOfConfig":"21"},{"size":3062,"mtime":1607231715400,"results":"37","hashOfConfig":"21"},{"size":2461,"mtime":1607231762640,"results":"38","hashOfConfig":"21"},{"size":3776,"mtime":1607234012544,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"tgfkkv",{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"42"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"42"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},"/Users/kevinyin/Documents/HackDuke2020/code4good/src/index.js",[],["95","96"],"/Users/kevinyin/Documents/HackDuke2020/code4good/src/App.js",["97","98","99","100","101"],"/Users/kevinyin/Documents/HackDuke2020/code4good/src/reportWebVitals.js",[],"/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/Conscious.js",["102","103","104"],"import './Conscious.css';\nimport React, {useState} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\nimport conscious1 from '../pictures/conscious1.PNG'\nimport conscious2 from '../pictures/conscious2.PNG'\nimport Alert from '@material-ui/lab/Alert';\n\nfunction Conscious() {\n  const [open, setOpen] = useState(JSON.parse(localStorage.getItem(\"open\")));\n\n  let history = useHistory();\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      maxWidth: 500,\n    },\n    media: {\n      height: 300,\n      // paddingTop: '56.25%', // 16:9\n    },\n    button: {\n      height: 100,\n      width:200,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }));\n  const classes = useStyles();\n\n  function yesClick(){\n    localStorage.setItem(\"conscious\", true)\n    history.push(\"/step2\")\n  }\n  function noClick(){\n    localStorage.setItem(\"conscious\", false)\n    history.push(\"/step2\")\n  }\n  return (\n    <div className=\"Conscious\">\n    <Collapse in={!open}>\n      <Alert severity=\"error\" >Disclamer: If you suspect a medical emergency, call 911 immediately before or instead of proceeding with this page</Alert>\n    </Collapse>\n    <Container fixed>\n      <br></br><br></br><br></br><br></br><br></br><br></br>\n      <Typography variant=\"h4\" >\n        Is the patient conscious?\n      </Typography>\n      <br></br><br></br>\n      <Typography variant=\"h6\" >\n        How to check for consciousness\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6}>\n          <Card className={classes.root}>\n            <CardMedia\n              className={classes.media}\n              image={conscious1}\n            />\n            <CardContent>\n              <Typography variant=\"h5\" component=\"h2\">\n                FOR CHILD OR ADULT\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n                Tap their sholder and shout \"Are you okay?\"\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n\n\n        <Grid item xs={12} sm={6}>\n          <Card className={classes.root}>\n            <CardMedia\n              className={classes.media}\n              image={conscious2}\n            />\n            <CardContent>\n              <Typography variant=\"h5\" component=\"h2\">\n                FOR INFANT\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n                Tap their shoulder or flick their foot\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n      <br></br><br></br><br></br><br></br>\n      <Button className={classes.button} variant=\"contained\" color=\"default\" value=\"false\" onClick={noClick}>No</Button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<Button className={classes.button} variant=\"contained\" color=\"secondary\" value=\"true\" onClick={yesClick}>Yes</Button>\n\n      </Container>\n    </div>\n\n  );\n}\n\nexport default Conscious;\n","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/Home.js",["105","106"],"import './Home.css';\nimport React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Collapse from '@material-ui/core/Collapse';\nimport Alert from '@material-ui/lab/Alert';\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport health from '../pictures/healthemergency.PNG';\nimport mental from '../pictures/mentalemergency.PNG';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChokingResults from './ChokingResults'\nimport CPRResults from './CPRResults'\n\nfunction Home() {\n  if (localStorage.getItem(\"open\") != \"false\") {\n    localStorage.setItem(\"open\", true);\n  }\n  const [open, setOpen] = useState(JSON.parse(localStorage.getItem(\"open\")));\n\n  const useStyles = makeStyles((theme) => ({\n    title: {\n      flexGrow: 1,\n    },\n    root: {\n      maxWidth: 400,\n      marginLeft:100\n    },\n    media: {\n      height: 400,\n    },\n    accordianroot: {\n      width: '100%',\n    },\n    heading: {\n      // fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n  }));\n  const classes = useStyles();\n\n  const handleClose = () => {\n    setOpen(false);\n    localStorage.setItem(\"open\", false);\n  };\n  return (\n    <div className=\"Home\">\n    <Dialog\n      open={open}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{\"DISCLAMER\"}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          If you suspect a medical emergency, call 911 immediately before or instead of proceeding with this page\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"alert\" autoFocus>\n          I understand\n        </Button>\n      </DialogActions>\n    </Dialog>\n    <Collapse in={!open}>\n      <Alert severity=\"error\" >Disclamer: If you suspect a medical emergency, call 911 immediately before or instead of proceeding with this page</Alert>\n    </Collapse>\n    <Container fixed>\n      <br></br><br></br><br></br><br></br><br></br><br></br>\n      <Typography variant=\"h1\" className={classes.title}>\n        Samaritan\n      </Typography>\n      <br></br>\n      <Typography variant=\"body2\" className='blurb'>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Rhoncus dolor purus non enim praesent elementum facilisis leo vel. Risus at ultrices mi tempus imperdiet. Semper risus in hendrerit gravida rutrum quisque non tellus.\n      </Typography>\n      <br></br><br></br><br></br><br></br>\n      <Typography variant=\"h4\" className={classes.title}>\n        Response Guide\n      </Typography>\n      <Divider />\n      <br></br>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6}>\n          <Card className={classes.root}>\n            <CardActionArea href=\"/step1\">\n              <CardMedia\n                className={classes.media}\n                image={health}\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  Medical Emergency\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Triage an urgent, unknown situation and give immediate first aid.\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n        </Grid>\n\n\n\n        <Grid item xs={12} sm={6}>\n          <Card className={classes.root}>\n            <CardActionArea href=\"/mental\">\n              <CardMedia\n                className={classes.media}\n                image={mental}\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  Mental Health Emergency\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Help a person in immediate crisis, or deescalate the situation.\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n        </Grid>\n      </Grid>\n      <br></br><br></br><br></br><br></br>\n      <Typography variant=\"h4\" className={classes.title}>\n        Quick Access Guide\n      </Typography>\n      <Divider />\n      <br></br>\n      <div className={classes.accordianroot}>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={classes.heading} variant=\"h5\">Anaphylactic Shock</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <table>\n            <tr>\n            <Typography variant=\"h6\">\n              1. Immediately call 911 or your local medical emergency number<br></br>\n              2. Ask the person if he or she is carrying an epinephrine autoinjector (EpiPen, Auvi-Q, others) to treat an allergic attack<br></br>\n              3. If the person says he or she needs to use an autoinjector, ask whether you should help inject the medication. This is usually done by pressing the autoinjector against the person's thigh<br></br>\n              4. Have the person lie still on his or her back<br></br>\n              5. Loosen tight clothing and cover the person with a blanket. Don't give the person anything to drink<br></br>\n              6. If there's vomiting or bleeding from the mouth, turn the person on his or her side to prevent choking<br></br>\n              7. If there are no signs of breathing, coughing or movement, begin CPR. Do uninterrupted chest presses — about 100 every minute — until paramedics arrive<br></br>\n            </Typography>\n            </tr>\n            <tr>\n              <CPRResults/>\n            </tr>\n          </table>\n\n\n        </AccordionDetails>\n      </Accordion>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n        >\n          <Typography className={classes.heading} variant=\"h5\">Choking</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <ChokingResults/>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel3a-content\"\n          id=\"panel3a-header\"\n        >\n          <Typography className={classes.heading} variant=\"h5\">Drowning</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <table>\n            <tr>\n            <Typography variant=\"h6\">\n              1. Take the person out of the water<br></br>\n              2. Check for breathing (look to see if the person's chest is moving or if air is coming out of their nose/mouth)<br></br>\n              3. If the person is not breathing, check pulse for 10 seconds<br></br>\n              4. If there is no pulse, start CPR<br></br>\n            </Typography>\n            </tr>\n            <tr>\n              <CPRResults/>\n            </tr>\n          </table>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel4a-content\"\n          id=\"panel4a-header\"\n        >\n          <Typography className={classes.heading} variant=\"h5\">Diabetic Shock</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography variant=\"h6\">\n          <b>If the person is passed out:</b><br></br>\n          1. Call 911 immediately and do not try to give them food or drink.<br></br>\n          2. You, or someone who knows how, should give them a glucagon shot -- not insulin! -- to raise their blood sugar to a safer level.<br></br>\n          <b>If the person is awake:</b><br></br>\n          1. Give them something sweet to eat or a non-diet drink.<br></br>\n          2. Help them get what they need to follow the 15/15 rule: Eat 15 grams of fast-acting carbs (3-4 glucose tablets or gels, 4 ounces of fruit juice or regular soda, or a tablespoon of honey or sugar) and wait 15 minutes. If they don't feel better, they should have more carbs and test their blood sugar again.<br></br>\n\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel5a-content\"\n          id=\"panel5a-header\"\n        >\n          <Typography className={classes.heading} variant=\"h5\">Stroke</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <table>\n            <tr>\n            <Typography variant=\"h6\">\n              1. Call 911<br></br>\n              2. Make sure the person is in a safe, comfortable position. Preferably, this should be lying on one side with their head slightly raised and supported in case they vomit.<br></br>\n              3. Check to see if they’re breathing. If they’re not breathing, perform CPR per the instructions below: <br></br>\n            </Typography>\n            </tr>\n            <tr>\n              <CPRResults/><br></br>\n            </tr>\n            <tr>\n            <Typography variant=\"h6\">\n            4. If they’re having difficulty breathing, loosen any constrictive clothing, such as a tie or scarf.<br></br>\n            5. Cover them with a blanket to keep them warm.<br></br>\n            6. Don’t give them anything to eat or drink.<br></br>\n            </Typography>\n            </tr>\n          </table>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel6a-content\"\n          id=\"panel6a-header\"\n        >\n          <Typography className={classes.heading} variant=\"h5\">Seizures</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography variant=\"h6\">\n            1. Completely clear the area around them.<br></br>\n            2. Loosen anything around the person's neck.<br></br>\n            3. Do not restrain them or put anything in their mouth.<br></br>\n            4. Place them on their side, to help keep their airway clear.<br></br>\n            5. Stay with them after the seizure stops.<br></br>\n            6. If seizure lasts longer than 5 minutes, CALL 911.<br></br>\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel7a-content\"\n          id=\"panel7a-header\"\n        >\n          <Typography className={classes.heading} variant=\"h5\">Broken Bones (Fractures)</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography variant=\"h6\">\n            1. Stop any bleeding.<br></br>\n            2. Immobilize the injured area.<br></br>\n            3. Apply ice packs to limit swelling and help relieve pain.<br></br>\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel8a-content\"\n          id=\"panel8a-header\"\n        >\n          <Typography className={classes.heading} variant=\"h5\">Major Burns</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography variant=\"h6\">\n          1. Protect the burned person from further harm.<br></br>\n          2. Make certain that the person burned is breathing. <br></br>\n          3. Remove jewelry, belts and other restrictive items.<br></br>\n          4. Cover the area of the burn.<br></br>\n          5. Don't immerse large severe burns in water.<br></br>\n          6. Elevate the burned area.<br></br>\n          7. Watch for signs of shock.<br></br>\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel9a-content\"\n          id=\"panel9a-header\"\n        >\n          <Typography className={classes.heading} variant=\"h5\">Minor Burns</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography variant=\"h6\">\n          1. Cool the burn.<br></br>\n          2. Remove rings or other tight items from the burned area.<br></br>\n          3. Don't break blisters.<br></br>\n          4. Apply lotion.<br></br>\n          5. Bandage the burn.<br></br>\n          6. If needed, take an over-the-counter pain relieve.<br></br>\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel10a-content\"\n          id=\"panel10a-header\"\n        >\n          <Typography className={classes.heading} variant=\"h5\">Suspected Poisoning</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography variant=\"h6\">\n          <b>If the person is stable and has no symptoms or the person is going to be transported to the local emergency department,</b> call Poison Help at <b>800-222-1222</b><br></br>\n          <b>Otherwise:</b><br></br>\n          <b>Call 911 and perform following appropriate actions:</b><br></br>\n          <b>Swallowed poison:</b> Remove anything remaining in the person's mouth. If the suspected poison is a household cleaner or other chemical, read the container's label and follow instructions for accidental poisoning.<br></br>\n          <b>Poison on the skin:</b> Remove any contaminated clothing using gloves. Rinse the skin for 15 to 20 minutes in a shower or with a hose.<br></br>\n          <b>Poison in the eye:</b> Gently flush the eye with cool or lukewarm water for 20 minutes or until help arrives.<br></br>\n          <b>Inhaled poison:</b> Get the person into fresh air as soon as possible.<br></br>\n          If the person vomits, turn his or her head to the side to prevent choking.<br></br>\n\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n      </div>\n    </Container>\n    <br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br>\n    </div>\n\n  );\n}\n\nexport default Home;\n","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/Breathing.js",["107","108","109"],"import './Conscious.css';\nimport React, {useState} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\nimport breathing from '../pictures/breathing.PNG'\nimport breathing2 from '../pictures/breathing2.PNG'\nimport Alert from '@material-ui/lab/Alert';\n\nfunction Breathing() {\n  const [open, setOpen] = useState(JSON.parse(localStorage.getItem(\"open\")));\n  const conscious = JSON.parse(localStorage.getItem(\"conscious\"))\n  let history = useHistory();\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      maxWidth: 500,\n    },\n    media: {\n      height: 300,\n      // paddingTop: '56.25%', // 16:9\n    },\n    button: {\n      height: 100,\n      width:200,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }));\n  const classes = useStyles();\n\n  function yesClick(){\n    localStorage.setItem(\"breathing\", true)\n    history.push(\"/results\")\n  }\n  function noClick(){\n    localStorage.setItem(\"breathing\", false)\n    if (conscious) {\n      history.push(\"/step5\")\n    } else {\n      history.push(\"/step4\")\n    }\n  }\n  return (\n    <div className=\"Breathing\">\n    <Collapse in={!open}>\n      <Alert severity=\"error\" >Disclamer: If you suspect a medical emergency, call 911 immediately before or instead of proceeding with this page</Alert>\n    </Collapse>\n    <Container fixed>\n      <br></br><br></br><br></br><br></br><br></br><br></br>\n      {!conscious ? <Typography variant=\"h3\" > Call 911 </Typography>: null}\n      <Typography variant=\"h4\" >\n        Is the patient breathing?\n      </Typography>\n      <br></br><br></br>\n      <Typography variant=\"h6\" >\n        How to check for breathing\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6}>\n          <Card className={classes.root}>\n            <CardMedia\n              className={classes.media}\n              image={breathing}\n            />\n            <CardContent>\n              <Typography variant=\"h5\" component=\"h2\">\n                FOR CHILD OR ADULT\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              1. Position the patient:\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              - If the victim is face-down, roll the victim onto his or\n              her back, while supporting the head and neck\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              - Tilt back head and lift chin to open airway\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              2. Check for breathing\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              - Look for movement and look, listen and feel for normal breathing for 10s\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              - Irregular, gasping or shallow breathing is not normal breathing\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n\n\n        <Grid item xs={12} sm={6}>\n          <Card className={classes.root}>\n            <CardMedia\n              className={classes.media}\n              image={breathing2}\n            />\n            <CardContent>\n              <Typography variant=\"h5\" component=\"h2\">\n                FOR INFANT\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              1. Position the patient:\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              - Tilt head to neutral position\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              2. Check for breathing\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              - Look for movement and look, listen and feel for normal breathing for 10s\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              - Irregular, gasping or shallow breathing is not normal breathing\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n      <br></br><br></br><br></br><br></br>\n      <Button className={classes.button} variant=\"contained\" color=\"default\" value=\"false\" onClick={noClick}>No</Button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<Button className={classes.button} variant=\"contained\" color=\"secondary\" value=\"true\" onClick={yesClick}>Yes</Button>\n\n      </Container>\n    </div>\n\n  );\n}\n\nexport default Breathing;\n","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/Pulse.js",["110","111","112"],"import './Conscious.css';\nimport React, {useState} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\nimport pulse1 from '../pictures/pulse1.PNG'\nimport pulse2 from '../pictures/pulse2.PNG'\nimport Alert from '@material-ui/lab/Alert';\n\nfunction Pulse() {\n  const [open, setOpen] = useState(JSON.parse(localStorage.getItem(\"open\")));\n  let history = useHistory();\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      maxWidth: 500,\n    },\n    media: {\n      height: 300,\n      // paddingTop: '56.25%', // 16:9\n    },\n    button: {\n      height: 100,\n      width:200,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }));\n  const classes = useStyles();\n\n  function yesClick(){\n    localStorage.setItem(\"pulse\", true)\n    history.push(\"/results\")\n  }\n  function noClick(){\n    localStorage.setItem(\"pulse\", false)\n    history.push(\"/results\")\n  }\n  return (\n    <div className=\"Pulse\">\n    <Collapse in={!open}>\n      <Alert severity=\"error\" >Disclamer: If you suspect a medical emergency, call 911 immediately before or instead of proceeding with this page</Alert>\n    </Collapse>\n    <Container fixed>\n      <br></br><br></br><br></br><br></br><br></br><br></br>\n      <Typography variant=\"h4\" >\n        Check for a pulse:\n      </Typography>\n      <br></br><br></br>\n      <Typography variant=\"h6\" >\n        How to check for a pulse\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6}>\n          <Card className={classes.root}>\n            <CardMedia\n              className={classes.media}\n              image={pulse1}\n            />\n            <CardContent>\n              <Typography variant=\"h5\" component=\"h2\">\n                FOR CHILD OR ADULT\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              1. Place one hand on the victim’s forehead\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              2. Place 2 fingers on the front of the neck\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              3. Slide the fingers down into the groove at the side of the neck\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <Card className={classes.root}>\n            <CardMedia\n              className={classes.media}\n              image={pulse2}\n            />\n            <CardContent>\n              <Typography variant=\"h5\" component=\"h2\">\n                FOR INFANT\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              1. Place one hand on the infant's forehead\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              2. Use the other hand to find the brachial pulse on the inside of the upper arm,\n                between the infant's elbow and shoulder.\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n      <br></br><br></br><br></br><br></br>\n      <Button className={classes.button} variant=\"contained\" color=\"default\" value=\"false\" onClick={noClick}>No</Button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<Button className={classes.button} variant=\"contained\" color=\"secondary\" value=\"true\" onClick={yesClick}>Yes</Button>\n\n      </Container>\n    </div>\n\n  );\n}\n\nexport default Pulse;\n","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/RescueBreathing.js",["113","114","115"],"import './Conscious.css';\nimport React, {useState} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\nimport rescuebreathing from '../pictures/rescue breaths.PNG'\nimport Alert from '@material-ui/lab/Alert';\n\nfunction RescueBreathing() {\n  const [open, setOpen] = useState(JSON.parse(localStorage.getItem(\"open\")));\n\n  let history = useHistory();\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      maxWidth: 1000,\n    },\n    media: {\n      height: 300,\n      // paddingTop: '56.25%', // 16:9\n    },\n    button: {\n      height: 100,\n      width:200,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }));\n  const classes = useStyles();\n\n  function yesClick(){\n    localStorage.setItem(\"rescuebreathing\", true)\n    history.push(\"/step3\")\n  }\n  function noClick(){\n    localStorage.setItem(\"rescuebreathing\", false)\n    history.push(\"/results\")\n  }\n  return (\n    <div className=\"RescueBreathing\">\n    <Collapse in={!open}>\n      <Alert severity=\"error\" >Disclamer: If you suspect a medical emergency, call 911 immediately before or instead of proceeding with this page</Alert>\n    </Collapse>\n    <Container fixed>\n      <br></br><br></br><br></br><br></br><br></br><br></br>\n      <Typography variant=\"h4\" >\n        Conduct Rescue Breathing:\n      </Typography>\n      <br></br><br></br>\n      <Typography variant=\"h6\" >\n        How to conduct rescue breathing\n      </Typography>\n          <Card className={classes.root}>\n            <CardMedia\n              className={classes.media}\n              image={rescuebreathing}\n            />\n            <CardContent>\n            <Grid container spacing={3}>\n              <Grid item xs={12} sm={6}>\n                <Typography variant=\"h5\" component=\"h2\">\n                  FOR CHILD OR ADULT\n                </Typography>\n                <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n                1. Tile head back and lift chin upward\n                </Typography>\n                <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n                2. Pinch nostrils shut\n                </Typography>\n                <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n                3. Cover mouth with yours\n                </Typography>\n                <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n                4. Gently breathe into person's mouth in 1s breaths and breathe every 5-6s\n                </Typography>\n                <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n                5. Continue for 2 breaths\n                </Typography>\n              </Grid>\n\n              <Grid item xs={12} sm={6}>\n                <Typography variant=\"h5\" component=\"h2\">\n                  FOR INFANT\n                </Typography>\n                <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n                1. Form seal around mouth and nose with your mouth\n                </Typography>\n                <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n                2. Gently breathe into person's mouth in 1s breaths and breathe every 5-6s\n                </Typography>\n                <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n                3. Continue for 2 breaths\n                </Typography>\n              </Grid>\n            </Grid>\n\n\n            </CardContent>\n          </Card>\n\n      <br></br><br></br><br></br><br></br>\n      <Typography variant=\"h4\" >\n        Did the patient's chest rise?\n      </Typography>\n      <br></br><br></br><br></br>\n      <Button className={classes.button} variant=\"contained\" color=\"default\" value=\"false\" onClick={noClick}>No</Button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<Button className={classes.button} variant=\"contained\" color=\"secondary\" value=\"true\" onClick={yesClick}>Yes</Button>\n\n      </Container>\n    </div>\n\n  );\n}\n\nexport default RescueBreathing;\n","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/Results.js",["116","117","118","119","120","121","122","123","124","125","126","127"],"import React, {useState} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\nimport rescuebreathing from '../pictures/rescue breaths.PNG'\nimport Alert from '@material-ui/lab/Alert';\nimport RescueBreathingResults from './RescueBreathingResults';\nimport CPRResults from './CPRResults';\nimport ChokingResults from './ChokingResults';\nimport MonitorResults from './MonitorResults';\nimport Call911 from './Call911';\nimport OtherResults from './OtherResults';\nimport UnconsciousChokingResults from './UnconsciousChokingResults';\n\nfunction Results() {\n  const open = JSON.parse(localStorage.getItem(\"open\"));\n  const conscious = JSON.parse(localStorage.getItem(\"conscious\"))\n  const breathing = JSON.parse(localStorage.getItem(\"breathing\"))\n  const rescuebreathing = JSON.parse(localStorage.getItem(\"rescuebreathing\"))\n  const pulse = JSON.parse(localStorage.getItem(\"pulse\"))\n  const choking = JSON.parse(localStorage.getItem(\"choking\"))\n  const rescuebreathingLeaf = !conscious && !breathing && rescuebreathing && pulse\n  const cprLeaf = !conscious && !breathing && rescuebreathing && !pulse\n  const chokingLeaf = conscious && !breathing && choking\n  const unconsciousChokingLeaf = !conscious && !breathing && !rescuebreathing\n  const monitor = !conscious && breathing\n  const call911 = conscious && !breathing && !choking\n  const other = conscious && breathing\n  return (\n    <div className=\"Results\">\n    <Collapse in={!open}>\n      <Alert severity=\"error\" >Disclamer: If you suspect a medical emergency, call 911 immediately before or instead of proceeding with this page</Alert>\n    </Collapse>\n    <Container fixed>\n      <br></br><br></br><br></br><br></br><br></br><br></br>\n      {rescuebreathingLeaf ? <RescueBreathingResults/>: null}\n      {cprLeaf ? <CPRResults/>: null}\n      {chokingLeaf ? <ChokingResults/>: null}\n      {unconsciousChokingLeaf ? <UnconsciousChokingResults/>: null}\n      {monitor ? <MonitorResults/>: null}\n      {call911 ? <Call911/>: null}\n      {other ? <OtherResults/>: null}\n      </Container>\n    </div>\n\n  );\n}\n\nexport default Results;\n","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/Choking.js",["128","129","130","131","132","133"],"import React, {useState} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\nimport rescuebreathing from '../pictures/rescue breaths.PNG'\nimport Alert from '@material-ui/lab/Alert';\n\nfunction Choking() {\n  const [open, setOpen] = useState(JSON.parse(localStorage.getItem(\"open\")));\n\n  let history = useHistory();\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      maxWidth: 1000,\n    },\n    media: {\n      height: 300,\n      // paddingTop: '56.25%', // 16:9\n    },\n    button: {\n      height: 100,\n      width:200,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }));\n  const classes = useStyles();\n\n  function yesClick(){\n    localStorage.setItem(\"choking\", true)\n    history.push(\"/results\")\n  }\n  function noClick(){\n    localStorage.setItem(\"choking\", false)\n    history.push(\"/results\")\n  }\n  return (\n    <div className=\"Choking\">\n    <Collapse in={!open}>\n      <Alert severity=\"error\" >Disclamer: If you suspect a medical emergency, call 911 immediately before or instead of proceeding with this page</Alert>\n    </Collapse>\n    <Container fixed>\n      <br></br><br></br><br></br><br></br><br></br><br></br>\n      <Typography variant=\"h4\" >\n        Is the patient choking?\n      </Typography>\n      <br></br><br></br>\n      <Typography variant=\"h6\" >\n        How to know if someone is choking\n      </Typography>\n          <Card className={classes.root}>\n\n            <CardContent>\n            <Typography variant=\"h5\" component=\"h2\">\n              If the patient cannot:\n            </Typography>\n            <Typography variant=\"h5\" component=\"p\">\n            speak\n            </Typography>\n            <Typography variant=\"h5\" component=\"p\">\n            cry\n            </Typography>\n            <Typography variant=\"h5\" component=\"p\">\n            cough\n            </Typography>\n            <Typography variant=\"h5\" component=\"p\">\n            or breathe,\n            </Typography>\n            <Typography variant=\"h5\" component=\"p\">\n            They are choking\n            </Typography>\n\n            </CardContent>\n          </Card>\n\n      <br></br><br></br><br></br><br></br>\n      <Button className={classes.button} variant=\"contained\" color=\"default\" value=\"false\" onClick={noClick}>No</Button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<Button className={classes.button} variant=\"contained\" color=\"secondary\" value=\"true\" onClick={yesClick}>Yes</Button>\n\n      </Container>\n    </div>\n\n  );\n}\n\nexport default Choking;\n","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/RescueBreathingResults.js",["134","135","136","137","138"],"\nimport React, {useState} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport rescuebreathing from '../pictures/rescue breaths.PNG'\n\n\nfunction RescueBreathingResults(){\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      maxWidth: 1000,\n    },\n    media: {\n      height: 300,\n      // paddingTop: '56.25%', // 16:9\n    },\n    button: {\n      height: 100,\n      width:200,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }));\n  const classes = useStyles();\n  return (\n    <div className=\"RescueBreathingResults\">\n      <Typography variant=\"h4\" >\n        Conduct Rescue Breathing:\n      </Typography>\n      <br></br><br></br>\n      <Typography variant=\"h6\" >\n        How to conduct rescue breathing\n      </Typography>\n          <Card className={classes.root}>\n            <CardMedia\n              className={classes.media}\n              image={rescuebreathing}\n            />\n            <CardContent>\n            <Grid container spacing={3}>\n              <Grid item xs={12} sm={6}>\n                <Typography variant=\"h5\" component=\"h2\">\n                  FOR CHILD OR ADULT\n                </Typography>\n                <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n                1. Tile head back and lift chin upward\n                </Typography>\n                <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n                2. Pinch nostrils shut\n                </Typography>\n                <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n                3. Cover mouth with yours\n                </Typography>\n                <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n                4. Gently breathe into person's mouth in 1s breaths and breathe every 5-6s\n                </Typography>\n                <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n                5. Continue for 2 breaths\n                </Typography>\n              </Grid>\n\n              <Grid item xs={12} sm={6}>\n                <Typography variant=\"h5\" component=\"h2\">\n                  FOR INFANT\n                </Typography>\n                <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n                1. Form seal around mouth and nose with your mouth\n                </Typography>\n                <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n                2. Gently breathe into person's mouth in 1s breaths and breathe every 5-6s\n                </Typography>\n                <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n                3. Continue for 2 breaths\n                </Typography>\n              </Grid>\n            </Grid>\n\n\n            </CardContent>\n          </Card>\n        </div>\n  );\n}\n\nexport default RescueBreathingResults;\n","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/CPRResults.js",["139","140","141","142","143","144","145","146","147"],"import React, {useState} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport cpr1 from '../pictures/cpr1.PNG'\nimport cpr2 from '../pictures/cpr2.PNG'\nimport Alert from '@material-ui/lab/Alert';\n\nfunction CPRResults() {\n  const [open, setOpen] = useState(JSON.parse(localStorage.getItem(\"open\")));\n  const conscious = JSON.parse(localStorage.getItem(\"conscious\"))\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      maxWidth: 500,\n    },\n    media: {\n      height: 300,\n      // paddingTop: '56.25%', // 16:9\n    },\n    button: {\n      height: 100,\n      width:200,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }));\n  const classes = useStyles();\n  return (\n    <div className=\"CPRResults\">\n      <Typography variant=\"h4\" >\n        Conduct CPR\n      </Typography>\n      <br></br><br></br>\n      <Typography variant=\"h6\" >\n        How to conduct CPR:\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6}>\n          <Card className={classes.root}>\n            <CardMedia\n              className={classes.media}\n              image={cpr1}\n            />\n            <CardContent>\n              <Typography variant=\"h5\" component=\"h2\">\n                FOR CHILD OR ADULT\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              1. Lay the patient on the back and open their airways\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              2. Do 30 chest compression\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              3. Do 2 rescue breaths\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              4. Repeat until an ambulance arrive\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n\n        <Grid item xs={12} sm={6}>\n          <Card className={classes.root}>\n            <CardMedia\n              className={classes.media}\n              image={cpr2}\n            />\n            <CardContent>\n              <Typography variant=\"h5\" component=\"h2\">\n                FOR INFANT\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              1. Lay the patient on the back and open their airways\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              2. Do 30 chest compression\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              3. Do 2 rescue breaths\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              4. Repeat until an ambulance arrive\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n\n  );\n}\n\nexport default CPRResults;\n","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/ChokingResults.js",["148","149","150","151","152","153","154","155"],"import React, {useState} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport choking from '../pictures/choking.PNG'\nimport choking2 from '../pictures/choking2.PNG'\nimport Alert from '@material-ui/lab/Alert';\n\nfunction ChokingResults() {\n  const [open, setOpen] = useState(JSON.parse(localStorage.getItem(\"open\")));\n  const conscious = JSON.parse(localStorage.getItem(\"conscious\"))\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      maxWidth: 500,\n    },\n    media: {\n      height: 300,\n      // paddingTop: '56.25%', // 16:9\n    },\n    button: {\n      height: 100,\n      width:200,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }));\n  const classes = useStyles();\n  return (\n    <div className=\"ChokingResults\">\n    <Container fixed>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6}>\n          <Card className={classes.root}>\n            <CardMedia\n              className={classes.media}\n              image={choking}\n            />\n            <CardContent>\n              <Typography variant=\"h5\" component=\"h2\">\n                FOR CHILD OR ADULT\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              1. Stand behind them and slightly to one side. Support their chest with 1 hand. Lean them forward\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              2. Give up to 5 sharp blows between their shoulder blades with the heel of your hand\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              3. Check if the blockage has cleared\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              If not...\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              DO NOT USE THE METHOD BELOW ON PREGNANT WOMEN\n\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              1. Stand behind the patient who's choking\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              2. Place your arms around their waist and bend them forward\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              3. Clench 1 fist and place it right above their belly button\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              4. Put the other hand on top of your fist and pull sharply inwards and upwards\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              5. Repeat this movement up to 5 times\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Card className={classes.root}>\n            <CardMedia\n              className={classes.media}\n              image={choking2}\n            />\n            <CardContent>\n              <Typography variant=\"h5\" component=\"h2\">\n                FOR INFANT\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              1. Sit down and lay your baby face down along your thighs, supporting their head with your hand\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              2. Give up to 5 sharp back blows with the heel of 1 hand in the middle of the back between the shoulder blades\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              If still not clear...\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              1. Lay your baby face up along the length of your thighs\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              2. Find the breastbone and place 2 fingers in the middle\n              </Typography>\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n              3. Give 5 sharp chest thrusts (pushes), compressing the chest by about a third\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n      </Container>\n    </div>\n\n  );\n}\n\nexport default ChokingResults;\n","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/MonitorResults.js",["156"],"import React, {useState} from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nfunction MonitorResults() {\n  return (\n    <div className=\"MonitorResults\">\n    <Typography variant=\"h4\" >\n      Monitor the patient's condition and wait for EMS\n    </Typography>\n    </div>\n\n  );\n}\n\nexport default MonitorResults;\n","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/Call911.js",["157"],"import React, {useState} from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nfunction Call911() {\n  return (\n    <div className=\"Call911\">\n    <Typography variant=\"h4\" >\n      Call 911\n    </Typography>\n    <Typography variant=\"h4\" >\n      Be sure to elevate the patient's head and bring the patient to fresh air\n    </Typography>\n    <Typography variant=\"h4\" >\n      Monitor the patient's condition and wait for EMS\n    </Typography>\n    </div>\n\n  );\n}\n\nexport default Call911;\n","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/OtherResults.js",["158"],"import React, {useState} from 'react';\nimport Typography from '@material-ui/core/Typography';\n\n\nfunction OtherResults() {\n  return (\n    <div className=\"MonitorResults\">\n    <Typography variant=\"h4\" >\n      Check for other emergency signs\n    </Typography>\n    </div>\n\n  );\n}\n\nexport default OtherResults;\n","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/MentalHealth.js",["159","160","161","162"],"import React, {useState} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\nimport rescuebreathing from '../pictures/rescue breaths.PNG'\nimport Alert from '@material-ui/lab/Alert';\nimport panic from '../pictures/panicattack.PNG'\n\nfunction MentalHealth() {\n  const open = JSON.parse(localStorage.getItem(\"open\"));\n\n  let history = useHistory();\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      maxWidth: 1000,\n      minHeight: 300,\n    },\n    media: {\n      height: 300,\n      // paddingTop: '56.25%', // 16:9\n    },\n    button: {\n      height: 100,\n      width:200,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }));\n  const classes = useStyles();\n\n  function yesClick(){\n    localStorage.setItem(\"mental\", true)\n    history.push(\"/mentalresults\")\n  }\n  function noClick(){\n    localStorage.setItem(\"mental\", false)\n    history.push(\"/mentalresults\")\n  }\n  return (\n    <div className=\"MentalHealth\">\n    <Collapse in={!open}>\n      <Alert severity=\"error\" >Disclamer: If you suspect a medical emergency, call 911 immediately before or instead of proceeding with this page</Alert>\n    </Collapse>\n    <Container fixed>\n      <br></br><br></br><br></br><br></br><br></br><br></br>\n      <Typography variant=\"h4\" >\n        Does the person have any of the following symptoms?\n      </Typography>\n      <br></br><br></br>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6}>\n          <Card className={classes.root}>\n\n            <CardContent>\n            <Typography variant=\"h5\" component=\"h2\">\n            Thoughts of harming self or others <br></br>\n            Attempts at harming self or others<br></br>\n            Mental health symptoms that impact ability to function or care for basic needs<br></br>\n            </Typography>\n\n            </CardContent>\n          </Card>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n          <Card className={classes.root}>\n            <CardMedia\n              className={classes.media}\n              image={panic}\n            />\n          </Card>\n          </Grid>\n        </Grid>\n      <br></br><br></br><br></br><br></br>\n      <Button className={classes.button} variant=\"contained\" color=\"default\" value=\"false\" onClick={noClick}>No</Button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<Button className={classes.button} variant=\"contained\" color=\"secondary\" value=\"true\" onClick={yesClick}>Yes</Button>\n\n      </Container>\n    </div>\n\n  );\n}\n\nexport default MentalHealth;\n","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/MentalResults.js",["163","164","165","166","167"],"import React, {useState} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\nimport deescalation from '../pictures/deescalation.PNG'\nimport Alert from '@material-ui/lab/Alert';\n\nfunction MentalResults() {\n  const open = JSON.parse(localStorage.getItem(\"open\"));\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      maxWidth: 1000,\n      minHeight: 300,\n    },\n    media: {\n      height: 300,\n    },\n  }));\n  const classes = useStyles();\n\n  const mental = JSON.parse(localStorage.getItem(\"mental\"))\n  return (\n    <div className=\"MentalResults\">\n    <Collapse in={!open}>\n      <Alert severity=\"error\" >Disclamer: If you suspect a medical emergency, call 911 immediately before or instead of proceeding with this page</Alert>\n    </Collapse>\n    <Container fixed>\n      <br></br><br></br><br></br><br></br><br></br><br></br>\n      <Typography variant=\"h4\" >\n        Try to de-escalate\n      </Typography>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6}>\n          <Card className={classes.root}>\n\n            <CardContent>\n            <Typography variant=\"h5\" component=\"h2\">\n            1. Listen and express support in a calm and careful manner<br></br>\n            2. Move slowly, and be non-judgemental<br></br>\n            3. Give the person space<br></br>\n            {mental ? 'If de-escalation does not work or the person gets more agitated call 911': null}\n            {!mental ? '4. Suggest seeking professional care to the person': null}\n            </Typography>\n\n            </CardContent>\n          </Card>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n          <Card className={classes.root}>\n            <CardMedia\n              className={classes.media}\n              image={deescalation}\n            />\n          </Card>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n\n  );\n}\n\nexport default MentalResults;\n","/Users/kevinyin/Documents/HackDuke2020/code4good/src/components/UnconsciousChokingResults.js",["168","169","170","171","172","173","174","175","176"],"import React, {useState} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Collapse from '@material-ui/core/Collapse';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport cpr1 from '../pictures/cpr1.PNG'\nimport cpr2 from '../pictures/cpr2.PNG'\nimport Alert from '@material-ui/lab/Alert';\n\nfunction UnconsciousChokingResults() {\n  const [open, setOpen] = useState(JSON.parse(localStorage.getItem(\"open\")));\n  const conscious = JSON.parse(localStorage.getItem(\"conscious\"))\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      maxWidth: 500,\n    },\n    media: {\n      height: 300,\n      // paddingTop: '56.25%', // 16:9\n    },\n    button: {\n      height: 100,\n      width:200,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }));\n  const classes = useStyles();\n  return (\n    <div className=\"UnconsciousChokingResults\">\n    <Typography variant=\"h4\" >\n      The patient is most likey choking\n    </Typography>\n    <Typography variant=\"h4\" >\n      Conduct CPR:\n    </Typography>\n    <br></br><br></br>\n    <Grid container spacing={3}>\n      <Grid item xs={12} sm={6}>\n        <Card className={classes.root}>\n          <CardMedia\n            className={classes.media}\n            image={cpr1}\n          />\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\">\n              FOR CHILD OR ADULT\n            </Typography>\n            <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n            1. Lay the patient on the back and open their airways<br></br>\n            2. Do 30 chest compression<br></br>\n            3. Do 2 rescue breaths<br></br>\n            4. If you see the object and it is loose, remove it<br></br>\n            5. If you do not see an object, give two more rescue breaths<br></br>\n            6. If the patient's chest still does not rise, keep going with cycles of chest compressions, checking for an object, and rescue breaths until medical help arrives or the patient starts breathing on their own<br></br>\n            7. If object is removed keep the patient still and seek medical help<br></br>\n            </Typography>\n\n          </CardContent>\n        </Card>\n      </Grid>\n\n      <Grid item xs={12} sm={6}>\n        <Card className={classes.root}>\n          <CardMedia\n            className={classes.media}\n            image={cpr2}\n          />\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\">\n              FOR INFANT\n            </Typography>\n            <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\">\n            1. Lay the patient on the back and open their airways<br></br>\n            2. Do 30 chest compression<br></br>\n            3. Do 2 rescue breaths<br></br>\n            4. If you see the object and it is loose, remove it<br></br>\n            5. If you do not see an object, give two more rescue breaths<br></br>\n            6. If the patient's chest still does not rise, keep going with cycles of chest compressions, checking for an object, and rescue breaths until medical help arrives or the patient starts breathing on their own<br></br>\n            7. If object is removed keep the patient still and seek medical help<br></br>\n            </Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n    </div>\n\n  );\n}\n\nexport default UnconsciousChokingResults;\n",{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":1,"column":8,"nodeType":"183","messageId":"184","endLine":1,"endColumn":12},{"ruleId":"181","severity":1,"message":"185","line":8,"column":8,"nodeType":"183","messageId":"184","endLine":8,"endColumn":14},{"ruleId":"181","severity":1,"message":"186","line":10,"column":8,"nodeType":"183","messageId":"184","endLine":10,"endColumn":16},{"ruleId":"181","severity":1,"message":"187","line":11,"column":8,"nodeType":"183","messageId":"184","endLine":11,"endColumn":13},{"ruleId":"181","severity":1,"message":"188","line":23,"column":8,"nodeType":"183","messageId":"184","endLine":23,"endColumn":16},{"ruleId":"181","severity":1,"message":"189","line":8,"column":8,"nodeType":"183","messageId":"184","endLine":8,"endColumn":19},{"ruleId":"181","severity":1,"message":"190","line":11,"column":8,"nodeType":"183","messageId":"184","endLine":11,"endColumn":18},{"ruleId":"181","severity":1,"message":"191","line":20,"column":16,"nodeType":"183","messageId":"184","endLine":20,"endColumn":23},{"ruleId":"181","severity":1,"message":"189","line":18,"column":8,"nodeType":"183","messageId":"184","endLine":18,"endColumn":19},{"ruleId":"192","severity":1,"message":"193","line":32,"column":36,"nodeType":"194","messageId":"195","endLine":32,"endColumn":38},{"ruleId":"181","severity":1,"message":"189","line":8,"column":8,"nodeType":"183","messageId":"184","endLine":8,"endColumn":19},{"ruleId":"181","severity":1,"message":"190","line":11,"column":8,"nodeType":"183","messageId":"184","endLine":11,"endColumn":18},{"ruleId":"181","severity":1,"message":"191","line":20,"column":16,"nodeType":"183","messageId":"184","endLine":20,"endColumn":23},{"ruleId":"181","severity":1,"message":"189","line":8,"column":8,"nodeType":"183","messageId":"184","endLine":8,"endColumn":19},{"ruleId":"181","severity":1,"message":"190","line":11,"column":8,"nodeType":"183","messageId":"184","endLine":11,"endColumn":18},{"ruleId":"181","severity":1,"message":"191","line":20,"column":16,"nodeType":"183","messageId":"184","endLine":20,"endColumn":23},{"ruleId":"181","severity":1,"message":"189","line":8,"column":8,"nodeType":"183","messageId":"184","endLine":8,"endColumn":19},{"ruleId":"181","severity":1,"message":"190","line":11,"column":8,"nodeType":"183","messageId":"184","endLine":11,"endColumn":18},{"ruleId":"181","severity":1,"message":"191","line":19,"column":16,"nodeType":"183","messageId":"184","endLine":19,"endColumn":23},{"ruleId":"181","severity":1,"message":"196","line":1,"column":16,"nodeType":"183","messageId":"184","endLine":1,"endColumn":24},{"ruleId":"181","severity":1,"message":"197","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":18},{"ruleId":"181","severity":1,"message":"185","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":14},{"ruleId":"181","severity":1,"message":"198","line":6,"column":8,"nodeType":"183","messageId":"184","endLine":6,"endColumn":12},{"ruleId":"181","severity":1,"message":"189","line":7,"column":8,"nodeType":"183","messageId":"184","endLine":7,"endColumn":19},{"ruleId":"181","severity":1,"message":"199","line":8,"column":8,"nodeType":"183","messageId":"184","endLine":8,"endColumn":19},{"ruleId":"181","severity":1,"message":"200","line":9,"column":8,"nodeType":"183","messageId":"184","endLine":9,"endColumn":17},{"ruleId":"181","severity":1,"message":"190","line":10,"column":8,"nodeType":"183","messageId":"184","endLine":10,"endColumn":18},{"ruleId":"181","severity":1,"message":"201","line":11,"column":10,"nodeType":"183","messageId":"184","endLine":11,"endColumn":20},{"ruleId":"181","severity":1,"message":"202","line":12,"column":8,"nodeType":"183","messageId":"184","endLine":12,"endColumn":12},{"ruleId":"181","severity":1,"message":"203","line":13,"column":10,"nodeType":"183","messageId":"184","endLine":13,"endColumn":20},{"ruleId":"181","severity":1,"message":"204","line":14,"column":8,"nodeType":"183","messageId":"184","endLine":14,"endColumn":23},{"ruleId":"181","severity":1,"message":"189","line":7,"column":8,"nodeType":"183","messageId":"184","endLine":7,"endColumn":19},{"ruleId":"181","severity":1,"message":"200","line":9,"column":8,"nodeType":"183","messageId":"184","endLine":9,"endColumn":17},{"ruleId":"181","severity":1,"message":"190","line":10,"column":8,"nodeType":"183","messageId":"184","endLine":10,"endColumn":18},{"ruleId":"181","severity":1,"message":"202","line":12,"column":8,"nodeType":"183","messageId":"184","endLine":12,"endColumn":12},{"ruleId":"181","severity":1,"message":"204","line":14,"column":8,"nodeType":"183","messageId":"184","endLine":14,"endColumn":23},{"ruleId":"181","severity":1,"message":"191","line":18,"column":16,"nodeType":"183","messageId":"184","endLine":18,"endColumn":23},{"ruleId":"181","severity":1,"message":"196","line":2,"column":16,"nodeType":"183","messageId":"184","endLine":2,"endColumn":24},{"ruleId":"181","severity":1,"message":"185","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":14},{"ruleId":"181","severity":1,"message":"205","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":17},{"ruleId":"181","severity":1,"message":"189","line":7,"column":8,"nodeType":"183","messageId":"184","endLine":7,"endColumn":19},{"ruleId":"181","severity":1,"message":"190","line":10,"column":8,"nodeType":"183","messageId":"184","endLine":10,"endColumn":18},{"ruleId":"181","severity":1,"message":"185","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":14},{"ruleId":"181","severity":1,"message":"188","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":16},{"ruleId":"181","severity":1,"message":"205","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":17},{"ruleId":"181","severity":1,"message":"189","line":7,"column":8,"nodeType":"183","messageId":"184","endLine":7,"endColumn":19},{"ruleId":"181","severity":1,"message":"190","line":10,"column":8,"nodeType":"183","messageId":"184","endLine":10,"endColumn":18},{"ruleId":"181","severity":1,"message":"187","line":15,"column":8,"nodeType":"183","messageId":"184","endLine":15,"endColumn":13},{"ruleId":"181","severity":1,"message":"206","line":18,"column":10,"nodeType":"183","messageId":"184","endLine":18,"endColumn":14},{"ruleId":"181","severity":1,"message":"191","line":18,"column":16,"nodeType":"183","messageId":"184","endLine":18,"endColumn":23},{"ruleId":"181","severity":1,"message":"207","line":19,"column":9,"nodeType":"183","messageId":"184","endLine":19,"endColumn":18},{"ruleId":"181","severity":1,"message":"185","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":14},{"ruleId":"181","severity":1,"message":"188","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":16},{"ruleId":"181","severity":1,"message":"189","line":7,"column":8,"nodeType":"183","messageId":"184","endLine":7,"endColumn":19},{"ruleId":"181","severity":1,"message":"190","line":10,"column":8,"nodeType":"183","messageId":"184","endLine":10,"endColumn":18},{"ruleId":"181","severity":1,"message":"187","line":15,"column":8,"nodeType":"183","messageId":"184","endLine":15,"endColumn":13},{"ruleId":"181","severity":1,"message":"206","line":18,"column":10,"nodeType":"183","messageId":"184","endLine":18,"endColumn":14},{"ruleId":"181","severity":1,"message":"191","line":18,"column":16,"nodeType":"183","messageId":"184","endLine":18,"endColumn":23},{"ruleId":"181","severity":1,"message":"207","line":19,"column":9,"nodeType":"183","messageId":"184","endLine":19,"endColumn":18},{"ruleId":"181","severity":1,"message":"196","line":1,"column":16,"nodeType":"183","messageId":"184","endLine":1,"endColumn":24},{"ruleId":"181","severity":1,"message":"196","line":1,"column":16,"nodeType":"183","messageId":"184","endLine":1,"endColumn":24},{"ruleId":"181","severity":1,"message":"196","line":1,"column":16,"nodeType":"183","messageId":"184","endLine":1,"endColumn":24},{"ruleId":"181","severity":1,"message":"196","line":1,"column":16,"nodeType":"183","messageId":"184","endLine":1,"endColumn":24},{"ruleId":"181","severity":1,"message":"189","line":7,"column":8,"nodeType":"183","messageId":"184","endLine":7,"endColumn":19},{"ruleId":"181","severity":1,"message":"190","line":10,"column":8,"nodeType":"183","messageId":"184","endLine":10,"endColumn":18},{"ruleId":"181","severity":1,"message":"204","line":14,"column":8,"nodeType":"183","messageId":"184","endLine":14,"endColumn":23},{"ruleId":"181","severity":1,"message":"196","line":1,"column":16,"nodeType":"183","messageId":"184","endLine":1,"endColumn":24},{"ruleId":"181","severity":1,"message":"185","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":14},{"ruleId":"181","severity":1,"message":"189","line":7,"column":8,"nodeType":"183","messageId":"184","endLine":7,"endColumn":19},{"ruleId":"181","severity":1,"message":"190","line":10,"column":8,"nodeType":"183","messageId":"184","endLine":10,"endColumn":18},{"ruleId":"181","severity":1,"message":"203","line":13,"column":10,"nodeType":"183","messageId":"184","endLine":13,"endColumn":20},{"ruleId":"181","severity":1,"message":"185","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":14},{"ruleId":"181","severity":1,"message":"188","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":16},{"ruleId":"181","severity":1,"message":"205","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":17},{"ruleId":"181","severity":1,"message":"189","line":7,"column":8,"nodeType":"183","messageId":"184","endLine":7,"endColumn":19},{"ruleId":"181","severity":1,"message":"190","line":10,"column":8,"nodeType":"183","messageId":"184","endLine":10,"endColumn":18},{"ruleId":"181","severity":1,"message":"187","line":15,"column":8,"nodeType":"183","messageId":"184","endLine":15,"endColumn":13},{"ruleId":"181","severity":1,"message":"206","line":18,"column":10,"nodeType":"183","messageId":"184","endLine":18,"endColumn":14},{"ruleId":"181","severity":1,"message":"191","line":18,"column":16,"nodeType":"183","messageId":"184","endLine":18,"endColumn":23},{"ruleId":"181","severity":1,"message":"207","line":19,"column":9,"nodeType":"183","messageId":"184","endLine":19,"endColumn":18},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'MenuIcon' is defined but never used.","'Alert' is defined but never used.","'Collapse' is defined but never used.","'CardActions' is defined but never used.","'CardHeader' is defined but never used.","'setOpen' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.","'Typography' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'makeStyles' is defined but never used.","'Grid' is defined but never used.","'useHistory' is defined but never used.","'rescuebreathing' is defined but never used.","'Container' is defined but never used.","'open' is assigned a value but never used.","'conscious' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]